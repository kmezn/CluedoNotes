@page "/"
@using CluedoNotes.Data
@inject PlayerService PlayerService

<h1>Cluedo Notes</h1>

Setup your Players and Cards before playing.

<h2>App Settings</h2>
<div class="form-control settingsPage">
    <ul>
        @* <li>
        Dark/Light mode.
        <InputSelect class="form-control" @bind-Value="@_settings.Theme">
        @foreach (var type in Enum.GetValues(typeof(AppTheme)))
        {
        <option value="@type">@type</option>
        }
        </InputSelect>
        </li> *@
        <li>
            My cards colour:
            <i class="oi oi-@_settings.MyCardStyle.ToString()" style="color:@_settings.MyCardColour.ToString()"></i>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.MyCardColour">
                @foreach (var colour in Enum.GetValues(typeof(TickColour)))
                {
                    <option value="@colour" style="color:@colour.ToString()">@colour</option>
                }
            </InputSelect>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.MyCardStyle">
                @foreach (TickStyle style in Enum.GetValues(typeof(TickStyle)))
                {
                    <option value="@style">@style</option>
                }
            </InputSelect>
        </li>
        <li>
            Card seen colour:
            <i class="oi oi-@_settings.ConfirmedCardSeenStyle.ToString()" style="color:@_settings.ConfirmedCardSeenColour.ToString()"></i>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.ConfirmedCardSeenColour">
                @foreach (var colour in Enum.GetValues(typeof(TickColour)))
                {
                    <option value="@colour" style="color:@colour.ToString()">@colour</option>
                }
            </InputSelect>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.ConfirmedCardSeenStyle">
                @foreach (TickStyle style in Enum.GetValues(typeof(TickStyle)))
                {
                    <option value="@style">@style</option>
                }
            </InputSelect>
        </li>
        <li>
            No card colour:
            <i class="oi oi-@_settings.ConfirmedNoCardStyle.ToString()" style="color:@_settings.ConfirmedNoCardColour.ToString()"></i>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.ConfirmedNoCardColour">
                @foreach (var colour in Enum.GetValues(typeof(TickColour)))
                {
                    <option value="@colour" style="color:@colour.ToString()">@colour</option>
                }
            </InputSelect>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.ConfirmedNoCardStyle">
                @foreach (TickStyle style in Enum.GetValues(typeof(TickStyle)))
                {
                    <option value="@style">@style</option>
                }
            </InputSelect>
        </li>
        <li>
            Card shown event colour:
            <div class="lowerCheckArea">
                <span style="border: 2px solid @_settings.CardShownColour.ToString(); margin: 2px;">15</span>
            </div>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.CardShownColour">
                @foreach (var colour in Enum.GetValues(typeof(TickColour)))
                {
                    <option value="@colour" style="color:@colour.ToString()">@colour</option>
                }
            </InputSelect>
        </li>
        <li>
            <button class="btn btn-success"
                    @onclick="SaveSettings">
                Save
            </button>
        </li>
    </ul>
</div>
<br />
<div class="form-control settingsPage">

    <h2>Game Version</h2> 
    <ul>
        <li>
            <InputSelect class="form-control settings-dropdown" @bind-Value="@_settings.GameVersion">
                @foreach (var type in Enum.GetValues(typeof(GameVersion)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
            <button class="btn btn-info"
                    @onclick="DefaultCardsSelect">
                VersionSelect
            </button>
        </li>

    </ul>
</div>
<footer>
    Version number: v@_versionNumber
</footer>


@code
{
    string _error = "";
    Settings _settings = new Settings();
    bool _showPlayerPopup = false;
    string _versionNumber = "0.0";

    protected override async Task OnInitializedAsync()
    {
        // Get the forecasts
        _settings = await PlayerService.GetSettingsAsync();
        _versionNumber = PlayerService.GetVersionNumber();
    }

    async Task SaveSettings()
    {
        _settings = await PlayerService.UpdateSettingsAsync(_settings);
    }
    async Task DefaultCardsSelect()
    {
        await PlayerService.ChangeDefaultCards(_settings.GameVersion);
    }
}